let g=new Map,n=new Map,c=new Map;function w(a,o,t,e,i){for(let r=0;r<o.length;r++)new IntersectionObserver(p=>{p.forEach(u=>{u.isIntersecting&&(console.log("ok"),d(o,r,a,t,e,i))})},{rootMargin:"100px"}).observe(o[r])}function d(a,o,t,e,i,r){a[o].tagName.toLowerCase()!=="iframe"&&(g.set(a[o],e[o]),n.set(a[o],i[o]),c.set(a[o],new YT.Player(a[o],{videoId:t[o],playerVars:{controls:0,rel:0,fs:0,enablejsapi:1,modestbranding:1},events:{onReady:s=>v(s,r,a[o]),onStateChange:s=>b(s,o,r,a[o])}})))}function b(a,o,t,e){f(a,o,t,e),new IntersectionObserver(r=>{r.forEach(s=>{s.isIntersecting||(a.target.pauseVideo(),f(a,o,t,e))})}).observe(g.get(e))}function v(a,o,t){n.get(t).addEventListener("click",()=>{n.get(t).classList.add(o),c.get(t).playVideo()})}function f(a,o,t,e){a.data==YT.PlayerState.PLAYING&&c.forEach((i,r)=>{r!==e&&(i.pauseVideo(),n.get(r).classList.remove(t))}),(a.data==YT.PlayerState.ENDED||a.data==YT.PlayerState.PAUSED)&&n.get(e).classList.remove(t)}export{w as o};
